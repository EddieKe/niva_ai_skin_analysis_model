[{"/home/lord-of-the-rings/app/Niva_AI_Skin_Analysis/frontend/src/index.js":"1","/home/lord-of-the-rings/app/Niva_AI_Skin_Analysis/frontend/src/App.js":"2","/home/lord-of-the-rings/app/Niva_AI_Skin_Analysis/frontend/src/views/Recommendations.jsx":"3","/home/lord-of-the-rings/app/Niva_AI_Skin_Analysis/frontend/src/views/imageInput.jsx":"4","/home/lord-of-the-rings/app/Niva_AI_Skin_Analysis/frontend/src/controllers/actions.js":"5","/home/lord-of-the-rings/app/Niva_AI_Skin_Analysis/frontend/src/views/Components/webCam.jsx":"6","/home/lord-of-the-rings/app/Niva_AI_Skin_Analysis/frontend/src/views/Components/ProductCard.jsx":"7"},{"size":197,"mtime":1755763396529,"results":"8","hashOfConfig":"9"},{"size":601,"mtime":1756291834028,"results":"10","hashOfConfig":"9"},{"size":7284,"mtime":1756291267563,"results":"11","hashOfConfig":"9"},{"size":4091,"mtime":1756085067380,"results":"12","hashOfConfig":"9"},{"size":507,"mtime":1756289086020,"results":"13","hashOfConfig":"9"},{"size":5013,"mtime":1755763396529,"results":"14","hashOfConfig":"9"},{"size":2344,"mtime":1755763396529,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1fblbq6",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"18"},"/home/lord-of-the-rings/app/Niva_AI_Skin_Analysis/frontend/src/index.js",[],["35","36"],"/home/lord-of-the-rings/app/Niva_AI_Skin_Analysis/frontend/src/App.js",["37"],"import React from \"react\";\nimport './App.css'\nimport {\n  BrowserRouter as Router,\n  Routes as Switch,\n  Route,\n  useHistory  \n} from \"react-router-dom\";\n\nimport ImageInput from \"./views/imageInput\";\nimport Recommendations from './views/Recommendations'\n\n// MUI\nimport CssBaseline from '@mui/material/CssBaseline';\n\nfunction App() {\n  return (\n    <>\n      <CssBaseline />\n      <Router>\n      \n        <Switch>\n          <Route path=\"/\" element={<ImageInput />} />\n\n          <Route path=\"/recs\" element={<Recommendations />} />\n        </Switch>\n\n      </Router>\n    </>\n\n  );\n}\n\nexport default App;\n","/home/lord-of-the-rings/app/Niva_AI_Skin_Analysis/frontend/src/views/Recommendations.jsx",["38","39","40"],"import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\n// MUI\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\nimport FormLabel from '@mui/material/FormLabel';\nimport Typography from '@mui/material/Typography';\n\nimport ProductCard from './Components/ProductCard'\n\n\n\n// {'face-moisturisers': [{'brand': 'azani active care',\n//    'name': 'unisex acne rescue cream - 30 ml',\n//    'price': '₹ 399',\n//    'url': 'https://www.myntra.com/face-moisturisers/azani-active-care/azani-active-care-unisex-acne-rescue-cream---30-ml/15322518/buy',\n//    'skin type': 'all',\n//    'concern': ['deep nourishment', 'acne', 'blemishes', 'dull skin']},\n\nconst Products = {\n    \n    skinCare:\n    {\n        'face-moisturisers':\n            [{\n                'brand': 'azani active care',\n                'name': 'unisex acne rescue cream - 30 ml',\n                'price': '₹ 399',\n                'url': 'https://www.myntra.com/face-moisturisers/azani-active-care/azani-active-care-unisex-acne-rescue-cream---30-ml/15322518/buy',\n                'skin type': 'all',\n                'concern': ['deep nourishment', 'acne', 'blemishes', 'dull skin']\n            },\n            {\n                'brand': 'mamaearth',\n                'name': 'vitamin c face milk with peach for skin illumination 100 ml',\n                'price': '₹ 404',\n                'url': 'https://www.myntra.com/face-moisturisers/mamaearth/mamaearth-vitamin-c-face-milk-with-peach-for-skin-illumination-100-ml/12411986/buy',\n                'skin type': 'all',\n                'concern': ['acne', 'blemishes', 'pigmentation', 'dull skin']\n            }]\n    },\n    makeUp:\n    {\n        'foundations':\n            [{\n                'brand': 'wet n wild',\n                'name': 'sustainable photo focus matte face primer - partners in prime',\n                'price': '₹ 454',\n                'url': 'https://www.myntra.com/foundation-and-primer/wet-n-wild/wet-n-wild-sustainable-photo-focus-matte-face-primer---partners-in-prime/12045988/buy',\n                'skin type': 'normal',\n                'skin tone': 'light to medium'\n            },\n            {\n                'brand': 'faces canada',\n                'name': 'ultime pro makeup fixer',\n                'price': '₹ 486',\n                'url': 'https://www.myntra.com/foundation-and-primer/faces-canada/faces-canada-ultime-pro-makeup-fixer/2421530/buy',\n                'skin type': 'normal',\n                'skin tone': 'light to medium'\n            }]\n    }\n}\n\n\nconst Recommendations = () => {\n    const {state} = useLocation();\n    const {data} = state; \n    const { analysis, routine, recommendations } = data; // Destructure the consolidated data\n    const { general, makeup } = recommendations;\n    return <>\n        <Container sx={{ marginTop: \"2vh\", padding: 1 }} alignitems=\"center\">\n               <Typography gutterBottom variant=\"h4\" component=\"div\" marginTop=\"2vh\" textAlign=\"center\">\n                Your Skin Analysis\n                </Typography>\n                 <Grid container spacing={2} justifyContent=\"center\" marginTop=\"1vh\">\n                <Grid item>\n                <Typography variant=\"body1\">\n                   <span style={{ fontWeight: 'bold' }}>Skin Type:</span> {analysis.type}\n                 </Typography>\n                </Grid>\n                 <Grid item>\n                   <Typography variant=\"body1\">\n                          <span style={{ fontWeight: 'bold' }}>Skin Tone:</span> {analysis.tone}\n                     </Typography>\n                    </Grid>\n                     <Grid item>\n                     <Typography variant=\"body1\">\n                        <span style={{ fontWeight: 'bold' }}>Acne Level:</span> {analysis.acne}\n                    </Typography>\n                     </Grid>\n                     </Grid>\n                 </Container>\n                     <Container sx={{ marginTop: \"2vh\", padding: 1 }}>\n                 <Typography gutterBottom variant=\"h4\" component=\"div\" marginTop=\"2vh\" textAlign=\"center\">\n               Your Skincare Routine\n                 </Typography>\n                    <Grid container spacing={4} justifyContent=\"center\">\n                 <Grid item xs={12} md={6}>\n            <Typography variant=\"h5\" component=\"div\" color=\"text.secondary\">\n                Morning Routine\n            </Typography>\n            <ul>\n                {routine.morning.map((step, index) => (\n                    <li key={index}>\n                        <Typography variant=\"body1\">{step}</Typography>\n                    </li>\n                ))}\n            </ul>\n        </Grid>\n        <Grid item xs={12} md={6}>\n            <Typography variant=\"h5\" component=\"div\" color=\"text.secondary\">\n                Evening Routine\n            </Typography>\n            <ul>\n                {routine.evening.map((step, index) => (\n                    <li key={index}>\n                        <Typography variant=\"body1\">{step}</Typography>\n                    </li>\n                ))}\n            </ul>\n        </Grid>\n    </Grid>\n    </Container>\n        <Container sx={{ marginTop: \"2vh\", padding: 1 }} alignitems=\"center\" width=\"inherit\">\n            <Typography gutterBottom variant=\"h4\" component=\"div\" marginTop=\"2vh\" textAlign=\"center\">\n                Skin care\n            </Typography>\n            {Object.keys(general).map((type, products) => {\n                return (<div><Typography gutterBottom variant=\"h5\" component=\"div\" marginTop=\"2vh\" color=\"text.secondary\">\n                            {type}\n                        </Typography>\n                        <Grid container spacing={1}>\n                    {general[type].slice(0,4).map((prod) => {\n                        return <Grid item xs={6} md={3}>\n                            <ProductCard\n                                name={prod.name}\n                                brand={prod.brand}\n                                image={prod.img}\n                                price={prod.price}\n                                url={prod.url}\n                                concern={prod.concern} />\n                        </Grid>\n                    })}\n                </Grid></div>)\n            })}\n\n            <Typography gutterBottom variant=\"h4\" component=\"div\" marginTop=\"2vh\" textAlign=\"center\">\n                Make up\n            </Typography>\n\n            <FormLabel component=\"legend\">{ }</FormLabel>\n            {/* {Object.keys(Products.makeUp).map((type, products)=>{\n            return (<div><FormLabel component=\"legend\">{type}</FormLabel><Grid container spacing={1}> */}\n            <div>\n            <Grid container spacing={1}>\n            {makeup.map((prod) => {\n                return <Grid item xs={6} md={3}>\n                    <ProductCard\n                        name={prod.name}\n                        brand={prod.brand}\n                        image={prod.img}\n                        price={prod.price}\n                        url={prod.url}\n                        concern={prod.concern} />\n                </Grid>\n            })}\n             </Grid></div>\n            {/* </Grid></div>) */}\n            {/* // })} */}\n        </Container>\n    </>\n};\n\nexport default Recommendations;","/home/lord-of-the-rings/app/Niva_AI_Skin_Analysis/frontend/src/views/imageInput.jsx",[],"/home/lord-of-the-rings/app/Niva_AI_Skin_Analysis/frontend/src/controllers/actions.js",[],"/home/lord-of-the-rings/app/Niva_AI_Skin_Analysis/frontend/src/views/Components/webCam.jsx",["41"],"import React, { useRef, useCallback, useState, useEffect } from \"react\";\nimport Webcam from \"react-webcam\";\nimport * as faceapi from 'face-api.js';\n\n// MUI\nimport Button from '@mui/material/Button';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\n\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height\n    };\n}\n\nconst aspectRatio = 4 / 3;\nconst thresholdPercentFace = 0.3;\nconst thresholdFaceScore = 0.7;\n\nfunction useWindowDimensions() {\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n    useEffect(() => {\n        function handleResize() {\n            setWindowDimensions(getWindowDimensions());\n        }\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    return windowDimensions;\n}\n\nconst WebcamCapture = ({ setImageSrc, setOnPlay, onPlay }) => {\n    let camHeight = useWindowDimensions().height\n    let camWidth = useWindowDimensions().width\n    if (camHeight > camWidth) {\n        camHeight = Math.round(camWidth * aspectRatio)\n    } else {\n        camHeight = Math.round(camHeight * 0.9)\n        camWidth = Math.round(camHeight / aspectRatio)\n    }\n    const videoConstraints = {\n        height: camHeight,\n        width: camWidth,\n        facingMode: \"user\"\n    };\n\n    // useEffect( () =>\n    //     {\n    //         console.log(videoConstraints.height)\n    //         console.log(videoConstraints.width)\n    //     }, [videoConstraints.height, videoConstraints.width]\n    // )\n    const webcamRef = useRef(null);\n    const capture = useCallback(\n        () => {\n            const imageSrc = webcamRef.current.getScreenshot();\n            console.log(imageSrc)\n            setImageSrc(imageSrc)\n        }, [webcamRef]\n    );\n\n    const [initialising, setInitialising] = useState(false)\n    useEffect(() => {\n        const loadModels = async () => {\n            const MODEL_URI = process.env.PUBLIC_URL + '/models';\n            setInitialising(true)\n            Promise.all([\n                faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URI),\n                // faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URI),\n                // faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URI),\n                // faceapi.nets.faceExpressionNet.loadFromUri(MODEL_URI),\n            ]).then(() => { console.log(\"models imported\") });\n        }\n        loadModels();\n    }, [])\n\n\n\n    const [faceOK, setFaceOK] = useState(null)\n    const handleVideoOnPlay = () => {\n        setInterval(async () => {\n            if (initialising) {\n                setInitialising(false)\n            }\n            let detections = []\n            if(webcamRef.current !== null)\n                detections = await faceapi.detectAllFaces(webcamRef.current.video, new faceapi.TinyFaceDetectorOptions());\n            if (detections.length > 1) {\n                // Multiple faces\n                setFaceOK(\"Multiple faces detected\")\n            }\n            else if (detections[0] !== undefined) {\n                // One face\n                const boxArea = Math.round(detections[0].box.height) * Math.round(detections[0].box.width)\n                const ImageArea = detections[0].imageWidth * detections[0].imageHeight\n                const percentFace = boxArea / ImageArea\n\n                if (percentFace < thresholdPercentFace) {\n                    // Not close enough\n                    setFaceOK(\"Come closer\")\n                } else if (detections[0].score < thresholdFaceScore) {\n                    // detected face score is low\n                    setFaceOK(\"Blurry or Not enough lighting\")\n                } else {\n                    // all conditions satisfied\n                    setFaceOK(\"OK\")\n                }\n            }\n            else {\n                // No face\n                setFaceOK(\"no face detected\")\n            }\n        }, 500)\n    }\n\n    return (\n        <>\n            <Grid item>\n                <Typography variant=\"h5\" component=\"div\" textAlign=\"center\">\n                    {initialising ? \"Initialising...\" : faceOK}\n                </Typography>\n                <Webcam\n                    id=\"webcam\"\n                    audio={false}\n                    height={videoConstraints.height}\n                    width={videoConstraints.width}\n                    ref={webcamRef}\n                    screenshotFormat=\"image/jpeg\"\n                    videoConstraints={videoConstraints}\n                    onUserMedia={handleVideoOnPlay} />\n            </Grid>\n            <Grid item xs={12}>\n                <Button\n                    onClick={capture}\n                    variant=\"contained\"\n                    disabled={(initialising) || (faceOK !== \"OK\")}\n                    fullWidth>\n                    Capture photo\n                </Button>\n            </Grid>\n        </>\n    );\n};\n\nexport default WebcamCapture","/home/lord-of-the-rings/app/Niva_AI_Skin_Analysis/frontend/src/views/Components/ProductCard.jsx",["42","43","44"],"import React,{ useState } from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\n\nconst unavailableImage = process.env.PUBLIC_URL+'./unavailable.png'\n\nexport default function ProductCard({name=\"cream\", price=2000, brand=\"brand\", url=\"https://www.myntra.com/\", concern=[], image = ''}) {\n    const redirectProduct = () => {\n        window.location.replace(url);\n    }\n    concern = [...new Set(concern)]\n    return (  \n        <Box onClick={redirectProduct} sx={{lineHeight:\"low\"}}>\n            <Card sx={{ maxWidth: \"50vw\" }}>\n            <CardMedia\n                component=\"img\"\n                height=\"200vh\"\n                image={image}\n                alt=\"Product image\"\n                />\n            <CardContent>\n                <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                    {brand}\n                    <Typography component=\"div\" color=\"text.primary\" variant=\"inline\" sx={{float: \"right\", fontWeight:\"bold\"}}>\n                        {price}\n                    </Typography>\n                </Typography>\n                <Typography gutterBottom variant=\"h6\" component=\"div\">\n                {name.length > 40 ? name.substring(0, 40)+\"...\" : name}\n                </Typography>\n                <Grid container>\n                    {concern.filter(n => n).map((concern) => {\n                        return <Grid item xs={12}><Typography \n                                    variant=\"body2\" \n                                    color=\"white\" \n                                    variant=\"inline\" \n                                    backgroundColor=\"info.main\"\n                                    borderRadius=\"5%\"\n                                    paddingLeft=\"2%\"\n                                    paddingRight=\"2%\"\n                                    paddingTop=\"1%\"\n                                    paddingBottom=\"1%\"\n                                    marginRight=\"2%\"\n                                    >{concern}</Typography></Grid>\n                    })}\n                </Grid>\n            </CardContent>\n            </Card>\n        </Box>\n    );\n}",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":7,"column":3,"nodeType":"51","messageId":"52","endLine":7,"endColumn":13},{"ruleId":"49","severity":1,"message":"53","line":1,"column":17,"nodeType":"51","messageId":"52","endLine":1,"endColumn":25},{"ruleId":"49","severity":1,"message":"54","line":1,"column":27,"nodeType":"51","messageId":"52","endLine":1,"endColumn":36},{"ruleId":"49","severity":1,"message":"55","line":21,"column":7,"nodeType":"51","messageId":"52","endLine":21,"endColumn":15},{"ruleId":"56","severity":1,"message":"57","line":63,"column":12,"nodeType":"58","endLine":63,"endColumn":23,"suggestions":"59"},{"ruleId":"49","severity":1,"message":"53","line":1,"column":16,"nodeType":"51","messageId":"52","endLine":1,"endColumn":24},{"ruleId":"49","severity":1,"message":"60","line":9,"column":7,"nodeType":"51","messageId":"52","endLine":9,"endColumn":23},{"ruleId":"61","severity":1,"message":"62","line":40,"column":37,"nodeType":"63","messageId":"64","endLine":40,"endColumn":53},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'Products' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'setImageSrc'. Either include it or remove the dependency array. If 'setImageSrc' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["67"],"'unavailableImage' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-global-assign","no-unsafe-negation",{"desc":"68","fix":"69"},"Update the dependencies array to be: [setImageSrc]",{"range":"70","text":"71"},[1877,1888],"[setImageSrc]"]